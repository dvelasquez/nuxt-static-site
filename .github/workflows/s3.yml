name: Deploy to S3

on:
  push:
    branches:
      - main
      - build/s3
jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node env üèó
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 14

      - name: Get yarn cache directory path üõ†
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules üì¶
        uses: actions/cache@v2.1.5
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules üì¶
        uses: actions/cache@v2.1.5
        id: node_modules-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install dependencies üë®üèª‚Äçüíª
        if: steps.node_modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Build Application üõ†
        run: yarn generate

      - name: Deploying application to Amazon S3
        uses: dvelasquez/deploy-s3-action@main
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-1
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET }}
          DIST_LOCATION_CODE: ./dist

      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          # Zone is required by both authentication methods
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
